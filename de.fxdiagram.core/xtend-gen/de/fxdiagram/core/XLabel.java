package de.fxdiagram.core;

import de.fxdiagram.annotations.properties.ModelNode;
import de.fxdiagram.core.XDomainObjectShape;
import de.fxdiagram.core.model.DomainObjectDescriptor;
import de.fxdiagram.core.model.ModelElementImpl;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javafx.geometry.VPos;
import javafx.scene.Node;
import javafx.scene.text.Text;
import org.eclipse.xtext.xbase.lib.ObjectExtensions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;

@ModelNode({ "text", "type" })
@SuppressWarnings("all")
public class XLabel extends XDomainObjectShape {
  public XLabel(final DomainObjectDescriptor domainObjectDescriptor) {
    super(domainObjectDescriptor);
  }
  
  @Override
  protected Node createNode() {
    Text _text = this.getText();
    final Procedure1<Text> _function = (Text it) -> {
      it.setTextOrigin(VPos.TOP);
    };
    return ObjectExtensions.<Text>operator_doubleArrow(_text, _function);
  }
  
  @Override
  public boolean isSelectable() {
    return false;
  }
  
  @Override
  protected void doActivate() {
  }
  
  @Override
  public String toString() {
    Class<? extends XLabel> _class = this.getClass();
    String _name = _class.getName();
    String _plus = (_name + " ");
    Text _text = this.getText();
    String _text_1 = _text.getText();
    return (_plus + _text_1);
  }
  
  /**
   * Automatically generated by @ModelNode. Needed for deserialization.
   */
  public XLabel() {
  }
  
  public void populate(final ModelElementImpl modelElement) {
    super.populate(modelElement);
    modelElement.addProperty(textProperty, Text.class);
    modelElement.addProperty(typeProperty, String.class);
  }
  
  public void postLoad() {
    
  }
  
  private SimpleObjectProperty<Text> textProperty = new SimpleObjectProperty<Text>(this, "text",_initText());
  
  private static final Text _initText() {
    Text _text = new Text();
    return _text;
  }
  
  public Text getText() {
    return this.textProperty.get();
  }
  
  public void setText(final Text text) {
    this.textProperty.set(text);
  }
  
  public ObjectProperty<Text> textProperty() {
    return this.textProperty;
  }
  
  private SimpleStringProperty typeProperty = new SimpleStringProperty(this, "type");
  
  public String getType() {
    return this.typeProperty.get();
  }
  
  public void setType(final String type) {
    this.typeProperty.set(type);
  }
  
  public StringProperty typeProperty() {
    return this.typeProperty;
  }
}
